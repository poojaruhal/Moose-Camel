api-coreNlp
collectCoreNlpResponseDummy
	"send Natural language query to coreNLP Api, collect response"

	| response |
	response := '{"sentences":[{"index":0,"parse":"(ROOT\n  (SBARQ\n    (WHNP (WP What))\n    (SQ (VBP are)\n      (NP (DT the))\n      (VP (VBN deprecated)\n        (NP (NN class))))))","basicDependencies":[{"dep":"ROOT","governor":0,"governorGloss":"ROOT","dependent":4,"dependentGloss":"deprecated"},{"dep":"dep","governor":4,"governorGloss":"deprecated","dependent":1,"dependentGloss":"What"},{"dep":"auxpass","governor":4,"governorGloss":"deprecated","dependent":2,"dependentGloss":"are"},{"dep":"nsubjpass","governor":4,"governorGloss":"deprecated","dependent":3,"dependentGloss":"the"},{"dep":"dobj","governor":4,"governorGloss":"deprecated","dependent":5,"dependentGloss":"class"}],"enhancedDependencies":[{"dep":"ROOT","governor":0,"governorGloss":"ROOT","dependent":4,"dependentGloss":"deprecated"},{"dep":"dep","governor":4,"governorGloss":"deprecated","dependent":1,"dependentGloss":"What"},{"dep":"auxpass","governor":4,"governorGloss":"deprecated","dependent":2,"dependentGloss":"are"},{"dep":"nsubjpass","governor":4,"governorGloss":"deprecated","dependent":3,"dependentGloss":"the"},{"dep":"dobj","governor":4,"governorGloss":"deprecated","dependent":5,"dependentGloss":"class"}],"enhancedPlusPlusDependencies":[{"dep":"ROOT","governor":0,"governorGloss":"ROOT","dependent":4,"dependentGloss":"deprecated"},{"dep":"dep","governor":4,"governorGloss":"deprecated","dependent":1,"dependentGloss":"What"},{"dep":"auxpass","governor":4,"governorGloss":"deprecated","dependent":2,"dependentGloss":"are"},{"dep":"nsubjpass","governor":4,"governorGloss":"deprecated","dependent":3,"dependentGloss":"the"},{"dep":"dobj","governor":4,"governorGloss":"deprecated","dependent":5,"dependentGloss":"class"}],"tokens":[{"index":1,"word":"What","originalText":"What","lemma":"what","characterOffsetBegin":0,"characterOffsetEnd":4,"pos":"WP","truecase":"INIT_UPPER","truecaseText":"What","before":"","after":" "},{"index":2,"word":"are","originalText":"are","lemma":"be","characterOffsetBegin":5,"characterOffsetEnd":8,"pos":"VBP","truecase":"LOWER","truecaseText":"are","before":" ","after":" "},{"index":3,"word":"the","originalText":"the","lemma":"the","characterOffsetBegin":9,"characterOffsetEnd":12,"pos":"DT","truecase":"LOWER","truecaseText":"the","before":" ","after":" "},{"index":4,"word":"deprecated","originalText":"deprecated","lemma":"deprecate","characterOffsetBegin":13,"characterOffsetEnd":23,"pos":"VBN","truecase":"LOWER","truecaseText":"deprecated","before":" ","after":" "},{"index":5,"word":"class","originalText":"class","lemma":"class","characterOffsetBegin":24,"characterOffsetEnd":29,"pos":"NN","truecase":"LOWER","truecaseText":"class","before":" ","after":""}]}]}'.
		^ NeoJSONReader fromString: response